Reset:
	SEI
	CLC
	XCE
	JML .fast

.fast
	ROL.w MEMSEL
	STZ.w NMITIMEN

	PEA.w $2100
	PLD

	LDX.b #$80
	PHX
	PLB

	STX.b INIDISP
	STX.b VMAIN

	REP #$29

	STZ.b WMADDL
	STZ.b WMADDH
	STZ.b VMADDR

	LDA.w #$4300
	TCD

	LDA.w #ZeroLand
	STA.b DMA0ADDR
	STA.b DMA1ADDR

	STX.b DMA0ADDRB
	STX.b DMA1ADDRB

	STZ.b DMA0SIZE
	STZ.b DMA1SIZE

	LDA.w #$1809
	STA.b DMA0MODE

	LDA.w #$8008
	STA.b DMA1MODE

	LDX.b #$03
	STX.w MDMAEN

;---------------------------------------------------------------------------------------------------

	LDY.b #$00
	STY.w CGADD

	LDA.w #$2200
	STA.b DMA1MODE

	LDA.w #TheOnlyBGPalettes
	STA.b DMA1ADDR

	LDA.w #32*4
	STA.b DMA1SIZE

	DEX
	STX.w MDMAEN

	STA.b DMA1SIZE

	LDY.b #$80
	STY.w CGADD

	STX.w MDMAEN

;---------------------------------------------------------------------------------------------------

	LDA.w #$0800
	STA.b DMA0SIZE

	DEX
	STX.w MDMAEN

	STZ.w OAMADDR

	LDA.w #$0408
	STA.b DMA0MODE

	LDA.w #E0Land
	STA.b DMA0ADDR

	LDA.w #$0200
	STA.b DMA0SIZE

	STX.w MDMAEN

	LDA.w #$0020
	STA.b DMA0SIZE

	LDA.w #ZeroLand
	STA.b DMA0ADDR

	STX.w MDMAEN

;---------------------------------------------------------------------------------------------------

	LDA.w #$1801
	STA.b DMA0MODE

	LDA.w #BaseTileMap
	STA.b DMA0ADDR

	LDY.b #BaseTileMap>>16
	STY.b DMA0ADDRB

	LDA.w #vma(!BOARDMAP)
	STA.w VMADDR

	LDA.w #$0800
	STA.b DMA0SIZE

	STX.w MDMAEN

	LDY.b #TileGraphics>>16
	STY.b DMA0ADDRB

	LDA.w #vma(!BG1CHR)
	STA.w VMADDR

	LDA.w #TileGraphics
	STA.b DMA0ADDR

	LDA.w #SpriteGraphics-TileGraphics
	STA.b DMA0SIZE

	STX.w MDMAEN

	LDA.w #BG3Graphics-SpriteGraphics
	STA.b DMA0SIZE

	LDA.w #vma(!OAMCHR)
	STA.w VMADDR

	STX.w MDMAEN

	LDA.w #EndOfBG3-BG3Graphics
	STA.b DMA0SIZE

	LDA.w #vma(!BG3CHR)
	STA.w VMADDR

	STX.w MDMAEN

;===================================================================================================

	LDA.w #$0000
	TCD

	LDA.w #$1FFD
	TCS

	LDA.l NMIVectorsDone+1
	STA.b NMIVX

	LDA.w #$FFFF
	STA.b BG1VOFF
	STA.b BG2VOFF
	STA.b BG3VOFF

	LDA.l $7FBEBE
	STA.b SEEDX

	LDA.l $7FEBEB
	STA.b SEEDY

	LDA.b SEEDX
	ORA.b SEEDY
	BNE .initialfine

	LDA.w #$BEBE
	STA.b SEEDX

	LDA.w #$A3C6
	STA.b SEEDY

.initialfine
	JSR VerifySRAM

	LDA.w WINNINGS
	BEQ .zero_winnings_a

	EOR.l SEEDY
	BEQ .zero_winnings_a

	STA.l SEEDY

.zero_winnings_a
	LDA.w WINNINGS+2
	BEQ .zero_winnings_b

	EOR.l SEEDX
	BEQ .zero_winnings_b

	STA.l SEEDX

.zero_winnings_b
	SEP #$30

	LDA.b #$0F
	STA.b INIDQ

	STZ.b BG2SCQ

	LDA.b #$04
	STA.b BG1SCQ

;===================================================================================================

StartScreen:
	LDA.b #$81
	STA.w NMITIMEN

	LDA.b #$17
	STA.w TMQ

	JSR DarkenGameBoard

	REP #$20

	STZ.b FRAME

.wait
	LDA.b FRAME
	AND.w #$001F
	BEQ .no_change

	LDA.b FRAME-1
	ASL
	ASL
	ASL

	LDA.w #NMIVector(NMI_DrawPressStart)
	BCC .visible

	LDA.w #NMIVector(NMI_DeletePressStart)

.visible
	JSR AddNMIVector

.no_change
	JSR WaitForNMI

	JSR Random
	JSR Random
	JSR Random

	LDA.b JOY1A
	AND.w #$0010

	BEQ .wait

	JMP StartTheGame

;===================================================================================================

E0Land:
	db $E0

;===================================================================================================

VerifySRAM:
	REP #$20
	SEP #$10

	LDA.w #$0000

	LDX.b #$7C

.next
	CLC
	ADC.l SRAMBASE+2,X

	DEX
	DEX
	BNE .next

	CMP.l SRAMBASE+0
	BNE DeleteSRAM

	EOR.w #$FFFF
	CMP.l SRAMBASE+2
	BNE DeleteSRAM

	LDA.w #$6562
	CMP.l SRAMBASE+4
	BNE DeleteSRAM

	LDA.w #$6562
	CMP.l SRAMBASE+6
	BNE DeleteSRAM

;===================================================================================================

LoadSRAM:
	LDX.b #$80

.next
	LDA.l SRAMBASE-2,X
	STA.w SMIRROR-2,X

	DEX
	DEX
	BNE .next

;===================================================================================================

UpdateSRAM:
	REP #$20
	SEP #$10

	LDA.w #$6562
	STA.w BBBB+0
	STA.w BBBB+2

	LDA.w #$FFFF
	STA.w CKSM2

	INC
	STA.w CKSM1

	LDX.b #$7C

.next
	CLC
	ADC.w SMIRROR+2,X

	DEX
	DEX
	BNE .next

	STA.w CKSM1

	EOR.w #$FFFF
	STA.w CKSM2

	LDX.b #$80

.copy
	LDA.w SMIRROR-2,X
	STA.l SRAMBASE-2,X

	DEX
	DEX
	BNE .copy

	RTS

;===================================================================================================

DeleteSRAM:
	LDX.b #$80

	LDA.w #$0000

.next
	STA.l SRAMBASE-2,X

	DEX
	DEX
	BNE .next

	BRA LoadSRAM

;===================================================================================================

WaitForNMI_x_times:
.wait
	JSR WaitForNMI

	DEX
	BNE .wait

	RTS

;===================================================================================================

AddVectorAndWaitForNMI:
	JSR AddNMIVector

;===================================================================================================

WaitForNMI:
	PHP

	REP #$28
	PHA

	STZ.b NMIWAIT

.spin
	LDA.b NMIWAIT
	JSR Random
	BEQ .spin

	INC.b FRAME

	LDA.w #$FFFF
	STA.b NMIWAIT

	PLA
	PLP

	RTS

;===================================================================================================

Random:
	PHP

	REP #$20

	LDA.b SEEDX
	ASL
	ROL
	ROL
	ROL
	ROL
	EOR.b SEEDX
	STA.b SEEDZ

	LDA.b SEEDY
	STA.b SEEDX

	LDA.b SEEDZ
	LSR
	ROR
	ROR
	EOR.b SEEDZ
	STA.b SEEDZ

	LDA.b SEEDY
	ROR
	EOR.b SEEDY
	EOR.b SEEDZ
	STA.b SEEDY

	PLP
	RTS

;===================================================================================================

WaitForInput:
	PHP

	SEP #$20

	LDA.b #$C0

.looping
	JSR WaitForNMI

	BIT.b JOY1ANEW
	BNE .pressed_something

	BIT.b JOY1BNEW
	BEQ .looping

.pressed_something
	PLP

	RTS

;===================================================================================================

BaseTileMap:
	dw $0407, $0409, $0409, $0409, $0409, $0409, $0409, $0409
	dw $0409, $0409, $0409, $0409, $0409, $0409, $0409, $0409
	dw $0409, $0409, $0409, $0409, $0409, $0409, $0409, $0409
	dw $0409, $0409, $0409, $0409, $0409, $0409, $0409, $4407

	dw $0408, $0410, $0416, $0416, $0416, $0413, $0416, $0416
	dw $0416, $0413, $0416, $0416, $0416, $0413, $0416, $0416
	dw $0416, $0413, $0416, $0416, $0416, $0413, $0416, $0416
	dw $0416, $4410, $0400, $0400, $0400, $0400, $0400, $4408

	; First voltorb row
	dw $0408, $0417, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $0430, $0430
	dw $0430, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $040C, $040D, $440C, $0420, $040C, $040D
	dw $440C, $0420, $040C, $040D, $440C, $0420, $040C, $040D
	dw $440C, $0420, $040C, $040D, $440C, $0420, $0440, $0440
	dw $0440, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $0430, $0430
	dw $0430, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0411, $0418, $0425, $0418, $0415, $0418, $0426
	dw $0418, $0415, $0418, $0427, $0418, $0415, $0418, $0428
	dw $0418, $0415, $0418, $0429, $0418, $0415, $0418, $0418
	dw $0418, $4411, $0400, $0400, $0400, $0400, $0400, $4408

	; Second voltorb row
	dw $0408, $0417, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $0431, $0431
	dw $0431, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $040C, $040D, $440C, $0421, $040C, $040D
	dw $440C, $0421, $040C, $040D, $440C, $0421, $040C, $040D
	dw $440C, $0421, $040C, $040D, $440C, $0421, $0441, $0441
	dw $0441, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $0431, $0431
	dw $0431, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0411, $0418, $0425, $0418, $0415, $0418, $0426
	dw $0418, $0415, $0418, $0427, $0418, $0415, $0418, $0428
	dw $0418, $0415, $0418, $0429, $0418, $0415, $0418, $0418
	dw $0418, $4411, $0400, $0400, $0400, $0400, $0400, $4408

	; Third voltorb row
	dw $0408, $0417, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $0432, $0432
	dw $0432, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $040C, $040D, $440C, $0422, $040C, $040D
	dw $440C, $0422, $040C, $040D, $440C, $0422, $040C, $040D
	dw $440C, $0422, $040C, $040D, $440C, $0422, $0442, $0442
	dw $0442, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $0432, $0432
	dw $0432, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0411, $0418, $0425, $0418, $0415, $0418, $0426
	dw $0418, $0415, $0418, $0427, $0418, $0415, $0418, $0428
	dw $0418, $0415, $0418, $0429, $0418, $0415, $0418, $0418
	dw $0418, $4411, $0400, $0400, $0400, $0400, $0400, $4408

	; Fourth voltorb row
	dw $0408, $0417, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $0433, $0433
	dw $0433, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $040C, $040D, $440C, $0423, $040C, $040D
	dw $440C, $0423, $040C, $040D, $440C, $0423, $040C, $040D
	dw $440C, $0423, $040C, $040D, $440C, $0423, $0443, $0443
	dw $0443, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $0433, $0433
	dw $0433, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0411, $0418, $0425, $0418, $0415, $0418, $0426
	dw $0418, $0415, $0418, $0427, $0418, $0415, $0418, $0428
	dw $0418, $0415, $0418, $0429, $0418, $0415, $0418, $0418
	dw $0418, $4411, $0400, $0400, $0400, $0400, $0400, $4408

	; Fifth voltorb row
	dw $0408, $0417, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $040A, $040B
	dw $440A, $0419, $040A, $040B, $440A, $0419, $0434, $0434
	dw $0434, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $040C, $040D, $440C, $0424, $040C, $040D
	dw $440C, $0424, $040C, $040D, $440C, $0424, $040C, $040D
	dw $440C, $0424, $040C, $040D, $440C, $0424, $0444, $0444
	dw $0444, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0417, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $840A, $840B
	dw $C40A, $0419, $840A, $840B, $C40A, $0419, $0434, $0434
	dw $0434, $4417, $0400, $0400, $0400, $0400, $0400, $4408

	dw $0408, $0411, $0418, $0425, $0418, $0415, $0418, $0426
	dw $0418, $0415, $0418, $0427, $0418, $0415, $0418, $0428
	dw $0418, $0415, $0418, $0429, $0418, $049A, $049B, $049B
	dw $049B, $049C, $049D, $049D, $049D, $049D, $049E, $4408

	; horizontal hint row
	dw $0408, $0417, $0430, $0430, $0430, $0419, $0431, $0431
	dw $0431, $0419, $0432, $0432, $0432, $0419, $0433, $0433
	dw $0433, $0419, $0434, $0434, $0434, $04AA, $04AB, $04AB
	dw $04AB, $04AB, $04AB, $04AB, $04AB, $04AB, $04AE, $4408

	dw $0408, $0417, $0440, $0440, $0440, $0419, $0441, $0441
	dw $0441, $0419, $0442, $0442, $0442, $0419, $0443, $0443
	dw $0443, $0419, $0444, $0444, $0444, $04AA, $04AB, $04AB
	dw $04AB, $04AB, $04AB, $04AB, $04AB, $04AB, $04AE, $4408

	dw $0408, $0417, $0430, $0430, $0430, $0419, $0431, $0431
	dw $0431, $0419, $0432, $0432, $0432, $0419, $0433, $0433
	dw $0433, $0419, $0434, $0434, $0434, $04AA, $04AB, $04AB
	dw $04AB, $04AB, $04AB, $04AB, $04AB, $04AB, $04AE, $4408

	dw $0408, $8410, $8416, $8416, $8416, $8413, $8416, $8416
	dw $8416, $8413, $8416, $8416, $8416, $8413, $8416, $8416
	dw $8416, $8413, $8416, $8416, $8416, $04BA, $849D, $849D
	dw $849D, $849D, $849D, $849D, $849D, $849D, $849E, $4408

	dw $0408, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $4408

	dw $8407, $8409, $8409, $8409, $8409, $8409, $8409, $8409
	dw $8409, $8409, $8409, $8409, $8409, $8409, $8409, $8409
	dw $8409, $8409, $8409, $8409, $8409, $8409, $8409, $8409
	dw $8409, $8409, $8409, $8409, $8409, $8409, $8409, $C407

	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400

	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400

	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400

	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400
	dw $0400, $0400, $0400, $0400, $0400, $0400, $0400, $0400

;===================================================================================================

TheOnlyBGPalettes:
; HUD
dw hexto555($28A068), hexto555($484040), hexto555($F8F8F8), hexto555($F84868)
dw hexto555($28A068), hexto555($484040), hexto555($B8B8B8), hexto555($B80030)
dw hexto555($28A068), hexto555($484040), hexto555($F8F8F8), hexto555($F84868)
dw hexto555($28A068), hexto555($A0A0A8), hexto555($505058), hexto555($F8F8F8)

; background
dw hexto555($28A068), hexto555($28A068), hexto555($188060), hexto555($282828)
dw hexto555($404040), hexto555($D0E8E0), hexto555($E07050), hexto555($40A840)
dw hexto555($E8A038), hexto555($3090F8), hexto555($C060E0), hexto555($F8F8F8)
dw hexto555($F8E018), hexto555($A8C8B8), hexto555($F8F8F8), hexto555($000000)

dw hexto555($28A068), hexto555($28A068), hexto555($686870), hexto555($282828)
dw hexto555($404040), hexto555($D0E8E0), hexto555($E07050), hexto555($A05850)
dw hexto555($B88880), hexto555($808080), hexto555($A0B0A8), hexto555($F8F8F8)
dw hexto555($F8E018), hexto555($A8C8B8), hexto555($F8F8F8), hexto555($A8C8B8)

dw hexto555($28A068), hexto555($28A068), hexto555($808080), hexto555($282828)
dw hexto555($404040), hexto555($D0E8E0), hexto555($E8E878), hexto555($C0A838)
dw hexto555($683028), hexto555($787878), hexto555($E860B0), hexto555($F8F8F8)
dw hexto555($F8E018), hexto555($D840F8), hexto555($E860B0), hexto555($D840F8)

;===================================================================================================

TheOnlySPPalettes:
dw hexto555($28A068), hexto555($28A068), hexto555($686870), hexto555($282828)
dw hexto555($404040), hexto555($D0E8E0), hexto555($785820), hexto555($F8B830)
dw hexto555($683028), hexto555($F84030), hexto555($000000), hexto555($000000)
dw hexto555($F8E018), hexto555($000000), hexto555($000000), hexto555($000000)

dw hexto555($28A068), hexto555($000000), hexto555($B84018), hexto555($804050)
dw hexto555($404040), hexto555($F85070), hexto555($F8D890), hexto555($F8C840)
dw hexto555($F88858), hexto555($000000), hexto555($000000), hexto555($000000)
dw hexto555($000000), hexto555($A8B8A8), hexto555($000000), hexto555($000000)

;===================================================================================================
